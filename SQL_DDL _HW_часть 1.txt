SQL_DDL Первая часть.

Таблица employees

--1) Создать таблицу employees

-- id. serial, primary key,
-- employee_name. Varchar(50), not null


create table employees (
id serial primary key,
employee_name Varchar(50) not null
);

--2) Наполнить таблицу employee 70 строками.

insert into employees(employee_name)
values ('Абрам'),
('Аваз'),
('Август'),
('Авдей'),
('Автандил'),
('Адам'),
('Адис'),
('Адольф'),
('Адриан'),
('Азарий'),
('Аким'),
('Алан'),
('Александр'),
('Алексей'),
('Альберт'),
('Альфред'),
('Амадей'),
('Амадеус'),
('Амаяк'),
('Анатолий'),
('Ангел'),
('Андоим'),
('Андрей'),
('Аникита'),
('Антон'),
('Ануфрий'),
('Арам'),
('Арий'),
('Аристарх'),
('Аркадий'),
('Арно'),
('Арнольд'),
('Арон'),
('Арсен'),
('Артем'),
('Артемий'),
('Артур'),
('Архип'),
('Аскольд'),
('Афанасий'),
('Ахмет'),
('Ашот'),
('Августа'),
('Аврора'),
('Агата'),
('Агнесса'),
('Агния'),
('Ада'),
('Адель'),
('Аза'),
('Азиза'),
('Аида'),
('Алана'),
('Алевтина'),
('Александра'),
('Алико'),
('Алина'),
('Алиса'),
('Алла'),
('Альберта'),
('Альбина'),
('Альжбета'),
('Амелия '),
('Амина'),
('Анастасия'),
('Ангелина'),
('Анжела'),
('Анисья'),
('Анита'),
('Анна');

--проверка:

select * from employees;


--Таблица salary
--3) Создать таблицу salary
- id. Serial primary key,
- monthly_salary. Int, not null

create table salary (
id serial primary key,
monthly_salary Int not null
);

--4) Наполнить таблицу salary 15 строками:

insert into salary(monthly_salary)
values (1000),
(1100),
(1200),
(1300),
(1400),
(1500),
(1600),
(1700),
(1800),
(1900),
(2000),
(2100),
(2200),
(2300),
(2400),
(2500);

--проверка: 

select * from salary;


--Таблица employee_salary
--5) Создать таблицу employee_salary
- id. Serial primary key,
- employee_id. Int, not null, unique
- salary_id. Int, not null

create table employee_salary (
id serial primary key,
employee_id int not null unique,
salary_id int not null);

--Если создать связи в таблицах, то будет ошибка из-за несуществующие employee_id по условию. Поэтому пришлось удалить таблицу и создать заново без связей.
--foreign key (employee_id)
--references employees (id),
--foreign key (salary_id)
--references salary (id)
--);
--drop table employee_salary;
select * from employee_salary;

--6) Наполнить таблицу employee_salary 40 строками:
- в 10 строк из 40 вставить несуществующие employee_id

insert into employee_salary (employee_id, salary_id )
values (30,1),
(29,2),
(28,3),
(27,4),
(26,5),
(25,6),
(24,7),
(23,8),
(22,9),
(21,10),
(20,11),
(19,12),
(18,13),
(17,14),
(16,15),
(15,16),
(14,1),
(13,2),
(12,3),
(11,4),
(10,5),
(9,6),
(8,7),
(7,8),
(6,9),
(5,10),
(4,11),
(3,12),
(2,13),
(1,14),
(80,16),
(81,15),
(82,14),
(83,12),
(84,1),
(85,11),
(86,8),
(87,5),
(88,4),
(89,14),
(92,11),
(91,7),
(93,13),
(94,9),
(95,6),
(96,5),
(97,14),
(98,4);

--проверка:

select * from employee_salary ;

--7) Создать таблицу roles
- id. Serial primary key,
- role_name int, not null, unique

create table roles (
id Serial primary key,
role_name int not null unique
);

--проверка:
select * from roles;

--8) Поменять тип столба role_name с int на varchar(30)

ALTER TABLE roles 
ALTER COLUMN role_name
TYPE varchar(30);

--проверка:
select column_name, data_type
FROM information_schema.columns
WHERE table_name = 'roles';

--9) Наполнить таблицу roles 20 строками:

insert into roles (role_name)
values ('Junior Python developer'),
('Middle Python developer'),
('Senior Python developer'),
('Junior Java developer'),
('Middle Java developer'),
('Senior Java developer'),
('Junior JavaScript developer'),
('Middle JavaScript developer'),
('Senior JavaScript developer'),
('Junior Manual QA engineer'),
('Middle Manual QA engineer'),
('Senior Manual QA engineer'),
('Project Manager'),
('Designer'),
('HR'),
('CEO'),
('Sales manager'),
('Junior Automation QA engineer'),
('Middle Automation QA engineer'),
('Senior Automation QA engineer');

--проверка:
select * from roles;

--Таблица roles_employee
--10) Создать таблицу roles_employee
- id. Serial primary key,
- employee_id. Int, not null, unique (внешний ключ для таблицы employees, поле id)
- role_id. Int, not null (внешний ключ для таблицы roles, поле id)

create table roles_employee (
id Serial primary key,
employee_id int not null unique,
role_id int not null,
foreign key (employee_id)
references employees (id),
foreign key (role_id)
references roles (id)
);

--проверка:
select * from roles_employee;

--11) Наполнить таблицу roles_employee 40 строками:

insert into roles_employee (employee_id, role_id)
values (1,4),
(2,5),
(3,7),
(4,9),
(5,11),
(6,1),
(7,2),
(8,3),
(9,6),
(10,8),
(11,10),
(12,12),
(13,13),
(14,14),
(15,15),
(16,16),
(17,17),
(18,18),
(19,19),
(20,20),
(40,1),
(39,2),
(38,3),
(37,4),
(36,5),
(35,6),
(34,7),
(33,8),
(32,9),
(31,10),
(30,11),
(29,12),
(28,13),
(27,14),
(26,15),
(25,16),
(24,17),
(23,18),
(22,19),
(21,20);

select * from roles_employee;




